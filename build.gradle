buildscript {
    dependencies {
        classpath 'com.h2database:h2:1.3.176'
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.4.RELEASE"
    id 'com.gradle.build-scan' version '1.13'
    id 'org.liquibase.gradle' version '1.2.4'
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    publishAlways()
}

allprojects {
    repositories {
        maven {
            url "${nexusUrl}/repository/maven-public"
            credentials(PasswordCredentials) {
                username = nexusUsername
                password = nexusPassword
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'utf-8'
        options.compilerArgs = ['-Xlint:-options']
    }

    tasks.withType(GroovyCompile) {
        options.encoding = 'utf-8'
        options.compilerArgs = ['-Xlint:-options']
        groovyOptions.encoding = 'utf-8'
    }
}

ext {
    pepDevConfRoot = "$rootDir/subprojects/pep-dev/pep-dev-configs/src/main/resources/META-INF"
    projectGenerator = [:]
    projectGenerator.name = 'pep'
    projectGenerator.path = 'platform'
    liquibaseUrl = 'jdbc:h2:~/data/h2/pep_dev;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE'
    liquibaseOldUrl = 'jdbc:h2:~/data/h2-diff/pep_dev;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE'
    liquibaseUsername = 'sa'
    liquibasePassword = ''
}

liquibase {
    activities {
        genDev {
            changeLogFile 'db/dev.xml'
            url           liquibaseUrl
            username      liquibaseUsername
            password      liquibasePassword
        }
        genDevData {
            changeLogFile     'db/dev-data.xml'
            url               liquibaseUrl
            username          liquibaseUsername
            password          liquibasePassword
            diffTypes         'data'
        }
        diffDev {
            changeLogFile     'db/dev-diff.xml'
            url               liquibaseOldUrl
            username          liquibaseUsername
            password          liquibasePassword
            referenceUrl      liquibaseUrl
            referenceUsername liquibaseUsername
            referencePassword liquibasePassword
        }
    }
    runList = 'genDevData'
}

apply plugin: 'idea'
apply from: "$pepDevConfRoot/configs/generator/generator.gradle"

subprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven'

    apply plugin: 'io.spring.dependency-management'

    apply from: "$pepDevConfRoot/configs/dependencies.gradle"

    apply from: "$pepDevConfRoot/configs/quality/codeQuality.gradle"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.data:spring-data-releasetrain:${versions.spring_data}"
        }
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = 'com.proper.enterprise.platform'
    // Needs to change version code in core.properties TOGETHER!!
    version = '0.4.4-SNAPSHOT'

    test {
        reports.html.enabled = false
        reports.junitXml.enabled = false
        //project unit parallel
        //maxParallelForks = 2
        //GC
        forkEvery = 100
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    dependencies {
        compile libraries.slf4j_api,
                libraries.spring_webmvc

        runtime libraries.druid,
                libraries.logback_classic

        testCompile libraries.groovy,
                    libraries.junit,
                    libraries.spock,
                    libraries.spring_test

        testRuntime libraries.aspectjweaver,
                    libraries.servlet_api,
                    libraries.spring_context_support
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "${nexusUrl}/repository/maven-releases") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }
                snapshotRepository(url: "${nexusUrl}/repository/maven-snapshots") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }
            }
        }
    }
}
