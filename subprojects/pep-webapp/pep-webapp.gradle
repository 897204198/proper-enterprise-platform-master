buildscript {
    repositories {
        maven {
            url "${nexusUrl}/repository/maven-public"
            credentials(PasswordCredentials) {
                username = nexusUsername
                password = nexusPassword
            }
        }
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:2.0.0'
    }
}

apply plugin: 'org.akhikhl.gretty'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

gretty {
    contextPath = 'pep'
    debugSuspend = false
    fileLogEnabled = false
    jvmArgs = ['-Xms256m', '-Xmx1024m']
    managedClassReload = true
    serverConfigFile = "$pepDevConfRoot/configs/docker/tomcat/conf/server.xml"
    servletContainer = 'tomcat7'
    jacocoEnabled = false
}

dependencies {
    compile libraries.groovy

    compile project(':pep-auth-api')

    runtime libraries.commons_fileupload,
            libraries.jackson_databind,
            libraries.spring_orm,
            libraries.spring_webmvc

    // Choose by datasource
    // available choices: libraries.h2, libraries.mysql_driver
    runtime libraries.h2,
            // available choices: project(':pep-oopsearch-sync-h2'), project(':pep-oopsearch-sync-mysql')
            project(':pep-oopsearch-sync-h2')


    // Necessary when using Web Service
    // runtime libraries.jaxws_rt

    // Select when need datasource monitor
    // runtime project(':pep-datasource-monitor')

    // Mandatory for PEP
    runtime project(':pep-configs')

    // Select on demand
    runtime project(':pep-auth-common-jpa'),
            project(':pep-auth-jwt'),
            // Needs one cache implementation if use cache API
            project(':pep-cache-ehcache'),
            project(':pep-oopsearch-config'),
            project(':pep-oopsearch'),
            project(':pep-workflow')
}
task cleanDist(type: Delete) {
    delete 'build/libs'
}

compileJava.dependsOn cleanDist
uploadArchives.deleteAllActions()
