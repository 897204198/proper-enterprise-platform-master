<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">

    <util:list id="pepJobList">
        <bean id="simpleTrigger1" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
            <property name="jobDetail">
                <bean class="com.proper.enterprise.platform.schedule.cluster.PEPMethodInvokingJobDetailFactoryBean">
                    <property name="targetBeanName" value="businessService"/>
                    <property name="targetMethod" value="firstBlood" />
                    <property name="concurrent" value="false"/>
                </bean>
            </property>
            <!-- delay 0.1 seconds -->
            <property name="startDelay" value="100"/>
            <!-- repeat every 0.2 seconds -->
            <property name="repeatInterval" value="200"/>
        </bean>
        <bean id="simpleTrigger2" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
            <property name="jobDetail">
                <bean class="com.proper.enterprise.platform.schedule.cluster.PEPMethodInvokingJobDetailFactoryBean">
                    <property name="targetBeanName" value="businessService"/>
                    <property name="targetMethod" value="doubleKill" />
                    <property name="concurrent" value="false"/>
                </bean>
            </property>
            <!-- delay 0 seconds -->
            <property name="startDelay" value="0"/>
            <!-- repeat every 0.1 seconds -->
            <property name="repeatInterval" value="100"/>
        </bean>
        <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
            <property name="jobDetail">
                <bean class="com.proper.enterprise.platform.schedule.cluster.PEPMethodInvokingJobDetailFactoryBean">
                    <property name="targetBeanName" value="businessService"/>
                    <property name="targetMethod" value="tripleKill" />
                    <property name="concurrent" value="false"/>
                </bean>
            </property>
            <!-- run every second -->
            <property name="cronExpression" value="* * * * * ?"/>
        </bean>
    </util:list>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
        <!--<property name="waitForJobsToCompleteOnShutdown" value="false"/>-->
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="overwriteExistingJobs" value="true" />
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
        <!--<property name="autoStartup" value="true"/>-->
        <property name="jobFactory">
            <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"/>
        </property>
        <property name="triggers" ref="pepJobList"/>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">pep_scheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <!--<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>-->
                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
                <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
                <!--<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.MSSQLDelegate</prop>-->
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
                <prop key="org.quartz.jobStore.isClustered">true</prop>
                <prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">5</prop>
                <prop key="org.quartz.threadPool.threadPriority">5</prop>
                <prop key="org.quartz.plugin.triggHistory.class">org.quartz.plugins.history.LoggingTriggerHistoryPlugin</prop>
                <prop key="org.quartz.plugin.triggHistory.triggerFiredMessage">Trigger {1}.{0} fired job {6}.{5} at {4, date,
                    yyyy-MM-dd HH:mm:ss}
                </prop>
                <prop key="org.quartz.plugin.triggHistory.triggerCompleteMessage">Trigger {1}.{0} completed firing job {6}.{5} at {4,
                    date, yyyy-MM-dd HH:mm:ss} with resulting trigger instruction code
                    {9}
                </prop>
            </props>
        </property>
    </bean>

</beans>
