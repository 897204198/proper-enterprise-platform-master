<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.flowable.idm.engine.impl.persistence.entity.GroupEntityImpl">

  <!-- GROUP RESULTMAP -->
  <resultMap id="groupResultMap" type="org.flowable.idm.engine.impl.persistence.entity.GroupEntityImpl">
    <id property="id" column="id" jdbcType="VARCHAR" />
    <result property="name" column="name" jdbcType="VARCHAR" />
  </resultMap>

  <!-- GROUP SELECT -->
  <select id="selectGroup" parameterType="string" resultMap="groupResultMap">
    select * from ${prefix}pep_auth_usergroups where id = #{id, jdbcType=VARCHAR}
  </select>

  <select id="selectGroupsByUserId" parameterType="org.flowable.engine.impl.db.ListQueryParameterObject"
          resultMap="groupResultMap">
    select g.*
      from ${prefix}pep_auth_usergroups g, ${prefix}pep_auth_groups_users gu
     where gu.user_id = #{parameter}
       and g.id = gu.user_id
       and g.valid = 'Y'
  </select>

  <select id="selectGroupsByUserIdAndGroupType" parameterType="org.flowable.engine.impl.db.ListQueryParameterObject" resultMap="groupResultMap">
    select g.*
      from ${prefix}pep_auth_usergroups g, ${prefix}pep_auth_groups_users gu
     where gu.user_id = #{parameter.userId}
       and g.id = gu.user_id
       and g.valid = 'Y'
    <!--  <if test="groupType != null">
         and g.TYPE_ = #{parameter.groupType}
      </if>-->
  </select>

  <select id="selectGroupByQueryCriteria" parameterType="org.flowable.engine.impl.GroupQueryImpl" resultMap="groupResultMap">
  	${limitBefore}
    select RES.* ${limitBetween}
    <include refid="selectGroupByQueryCriteriaSql" />
    order by RES.name
    ${limitAfter}
  </select>

   <select id="selectGroupCountByQueryCriteria" parameterType="org.flowable.engine.impl.GroupQueryImpl" resultType="long">
    select count(RES.id)
    <include refid="selectGroupByQueryCriteriaSql" />
  </select>

  <sql id="selectGroupByQueryCriteriaSql">
      from ${prefix}pep_auth_usergroups RES
      <if test="userId != null">
          inner join ${prefix}pep_auth_groups_users M on RES.id = M.user_group_id
          inner join ${prefix}pep_auth_users U on M.user_id = U.id
      </if>
      <where>
          <if test="id != null">
              RES.name = #{id}
          </if>
          <if test="name != null">
              and RES.name = #{name}
          </if>
          <if test="nameLike != null">
              and RES.name like #{nameLike}${wildcardEscapeClause}
          </if>
          <if test="userId != null">
              and U.id = #{userId}
          </if>
          <if test="procDefId != null">
              and exists (select ID_ from ${prefix}ACT_RU_IDENTITYLINK where PROC_DEF_ID_ = #{procDefId} and GROUP_ID_=RES.id )
          </if>
              and RES.valid = 'Y'
      </where>
  </sql>

  <select id="selectGroupByNativeQuery" parameterType="java.util.Map" resultMap="groupResultMap">
    <include refid="org.flowable.engine.db.common.selectByNativeQuery"/>
  </select>

  <select id="selectGroupCountByNativeQuery" parameterType="java.util.Map" resultType="long">
    ${sql}
  </select>

</mapper>
