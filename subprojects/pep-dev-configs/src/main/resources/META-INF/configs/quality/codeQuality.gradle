apply plugin: 'checkstyle'
apply plugin: 'codenarc'
apply plugin: 'findbugs'
apply plugin: 'jacoco'

def configDir = new File(pepDevConfRoot, 'configs/quality')

ext.checkstyleConfigDir = "$configDir/checkstyle"

checkstyle {
    configFile = new File(checkstyleConfigDir, "checkstyle.xml")
    configProperties.checkstyleConfigDir = checkstyleConfigDir
    toolVersion = '8.7'
}

codenarc {
    configFile = new File(configDir, "codenarc.xml")
    toolVersion = '0.25.2'
}

findbugs {
    toolVersion = '3.0.1'
    excludeFilter = file("$configDir/findbugs/excludeFilter.xml")
}

jacoco {
    toolVersion = "0.7.7.201606060606"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/RedisCacheManager**',
                '**/AbstractEhcacheRegionFactory**',
                '**/EhCacheRegionFactory**'
            ])
        })
    }
}

configurations.codenarc.resolutionStrategy.force(libraries.groovy_all)

def excludeFlowable = 'org/flowable'
def excludeGzipFromJetty = 'com/proper/enterprise/platform/core/utils/gzip'

tasks.withType(Checkstyle) {
    exclude "**/$excludeFlowable/**"
    exclude "**/$excludeGzipFromJetty/**"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport
build.dependsOn jacocoTestReport
